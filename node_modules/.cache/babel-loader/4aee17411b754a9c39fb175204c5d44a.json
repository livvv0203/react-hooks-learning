{"ast":null,"code":"// To store redux related file\nimport { confugureStore } from 'redux';\n\n// Create a counter reducer\nconst counterReducer = (state, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  return state;\n};\n\n// Create a new store, then point at the reducer function\nconst store = confugureStore(counterReducer);\nexport default store; // only provide once, to the highest level of project - aka index.js","map":{"version":3,"names":["confugureStore","counterReducer","state","action","type","counter","store"],"sources":["/Users/jieqingliu/Desktop/React-Test-Files/redux-test-proj-2/src/store/index.js"],"sourcesContent":["// To store redux related file\nimport { confugureStore } from 'redux';\n\n// Create a counter reducer\nconst counterReducer = (state, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n    };\n  }\n  return state;\n};\n\n// Create a new store, then point at the reducer function\nconst store = confugureStore(counterReducer);\n\nexport default store; // only provide once, to the highest level of project - aka index.js\n\n\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,OAAO;;AAEtC;AACA,MAAMC,cAAc,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLC,OAAO,EAAEH,KAAK,CAACG,OAAO,GAAG;IAC3B,CAAC;EACH;EAEA,IAAIF,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLC,OAAO,EAAEH,KAAK,CAACG,OAAO,GAAG;IAC3B,CAAC;EACH;EACA,OAAOH,KAAK;AACd,CAAC;;AAED;AACA,MAAMI,KAAK,GAAGN,cAAc,CAACC,cAAc,CAAC;AAE5C,eAAeK,KAAK,CAAC,CAAC"},"metadata":{},"sourceType":"module"}